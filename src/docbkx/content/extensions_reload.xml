<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xml:id="extensions_reload">
<info>
    <title>Reload Extension</title>
</info>
<para>
    The reload extension allows CometD to load or reload a page without having to re-handshake in the new
    (or reloaded) page, thereby resuming the existing CometD connection.
    This extension requires only the client-side extension.
</para>
<section>
<info>
    <title>Enabling the Client-side Extension</title>
</info>
<para>
    The <code>dojox/cometd/reload.js</code> provides the client side extension binding for Dojo, and it is
    sufficient to use Dojo's <code>dojo.require</code> mechanism:
</para>
<informalexample>
<programlisting language="javascript"><![CDATA[
dojo.require("dojox.cometd.reload");
]]></programlisting>
</informalexample>
<para>
    The file <code>jquery.cometd-reload.js</code> provides the client-side extension binding for jQuery.
    This file must be included in the HTML page via the <code>&lt;script&gt;</code> tag, along with the
    <link xl:href="http://plugins.jquery.com/project/Cookie">jQuery cookie plugin</link> and the reload
    extension implementation:
</para>
<informalexample>
<programlisting language="javascript"><![CDATA[
<script type="text/javascript" src="jquery.cookie.js"></script>
<script type="text/javascript" src="ReloadExtension.js"></script>
<script type="text/javascript" src="jquery.cometd-reload.js"></script>
]]></programlisting>
</informalexample>
<para>
    In both Dojo and jQuery extension bindings, the extension is registered on the default
    <code>cometd</code> object under the name "reload".
</para>
</section>
<section>
<info>
    <title>Configuring the Reload Extension</title>
</info>
<para>
    Here is the list of configuration parameters that the reload extension accepts:
</para>
<table>
<caption>Reload Extension Configuration Parameters</caption>
<thead>
<tr>
  <th>Parameter Name</th>
  <th>Default Value</th>
  <th>Parameter Description</th>
</tr>
</thead>
<tbody>
<tr>
    <td>cookieName</td>
    <td>org.cometd.reload</td>
    <td>The name of the short lived cookie used by the reload extension to save the connection state details</td>
</tr>
<tr>
    <td>cookiePath</td>
    <td>/</td>
    <td>The path of the short lived cookie used by the reload extension</td>
</tr>
<tr>
    <td>cookieMaxAge</td>
    <td>5</td>
    <td>The max age, in seconds, of the short lived cookie used by the reload extension</td>
</tr>
</tbody>
</table>
<para>
    The JavaScript <code>cometd</code> object is normally already configured with the default reload extension
    configuration.
    <?linebreak?>
    This is how you can reconfigure the reload extension:
</para>
<orderedlist>
<listitem>
<para>
    Reconfigure the extension at startup:
</para>
<informalexample>
<programlisting language="javascript"><![CDATA[
var cometd = dojox.cometd; // Use $.cometd if using jquery
cometd.getExtension('reload').configure({
    cookieMaxAge: 15
});
]]></programlisting>
</informalexample>
</listitem>
<listitem>
<para>
    Reconfigure the extension every time the <code>cometd.reload()</code> method is invoked:
</para>
<informalexample>
<programlisting language="javascript"><![CDATA[
var cometd = dojox.cometd; // Use $.cometd if using jquery
...
cometd.reload({
    cookieMaxAge: 15
});
]]></programlisting>
</informalexample>
</listitem>
</orderedlist>
</section>
<section>
<info>
    <title>Understanding Reload Extension Details</title>
</info>
<para>
    The reload extension allows CometD to reload a page with the reloaded page resuming an existing CometD connection.
</para>
<para>
    To activate the reload extension, the page must call <code>cometd.reload()</code> just before the page is
    reloaded (for example, after clicking a link or on the page unload event).
    This saves a short-lived cookie with the connection state details.
    The new page still needs to call subscribe to the channels it is interested in to register the callbacks,
    since the client state has been completely reset due to the reload.
</para>
<para>
    A simple use example follows:
</para>
<informalexample>
<programlisting language="javascript"><![CDATA[
<html>
    <head>
        <script type="text/javascript" src="dojo/dojo.js"></script>
        <script type="text/javascript">
            dojo.require("dojox.cometd");
            dojo.require("dojox.cometd.reload");

            dojox.cometd.init({ url: "/context/cometd", logLevel: "info" });
            dojox.cometd.subscribe("/some/channel", function() { ... });
            dojox.cometd.subscribe("/some/other/channel", function() { ... });

            // On page unload, call dojox.cometd.reload()
            dojo.addOnUnload(dojox.cometd, "reload");
        </script>
    </head>
    <body>
    ...
    </body>
</html>
]]></programlisting>
</informalexample>
</section>
</section>
