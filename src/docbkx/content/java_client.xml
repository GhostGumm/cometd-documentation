<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xml:id="java_client">
<info>
    <title>CometD 2 Java Client Implementation</title>
</info>
<para>
You can use the CometD client implementation in any JSE<sup>TM</sup> or
JEE<sup>TM</sup> application.
It consists of one main class, <code>org.cometd.client.BayeuxClient</code>, which
implements the <code>org.cometd.bayeux.client.ClientSession</code> interface.
Differently from CometD 1, this class now supports pluggable transports (to
allow a WebSocket transport to be implemented when the WebSocket
protocol is standardized), and currently only supports the long polling
transport via HTTP, that depends on <link xl:href="http://eclipse.org/jetty">Jetty</link>'s asynchronous <link
xl:href="http://wiki.eclipse.org/Jetty/Tutorial/HttpClient">HttpClient</link>.
</para>
<para>
Typical usages of the CometD Java client include:
</para>
<itemizedlist>
<listitem>
<para>As the transport for a rich thick Java UI (for example, Swing) to
communicate to a Bayeux Server (also via firewalls)</para>
</listitem>
<listitem>
<para>As a load generator to simulate thousands of CometD clients, like for
example <code>org.cometd.client.BayeuxLoadGenerator</code></para>
</linkitem>
</itemizedlist>
<para>
The following sections provide details about the Java
<code>BayeuxClient</code> APIs and their implementation secrets.
</para>
<itemizedlist>
<listitem>
<para>