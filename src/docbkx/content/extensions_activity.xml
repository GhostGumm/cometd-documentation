<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="extensions_activity">
<info>
    <title>Activity Extension</title>
</info>
<para>
    The activity extension monitors the activity of server sessions to disconnect them after a configurable
    period of inactivity.
    This is a server-side only extension implemented by class
    <classname>org.cometd.server.ext.ActivityExtension</classname>.
</para>
<para>
    This extension is useful because the Bayeux Protocol (see <xref linkend="bayeux" />) uses a heart-beat mechanism
    (over the channel <code>/meta/connect</code>) that prevents servers to declare resources such as connections
    or transport sessions (for example, Servlet's <code>HttpSession</code>s) as idle, and therefore prevents
    servers to close or destroy resources when they are idle for a long time.
</para>
<para>
    A specific example is the following: when the <code>long-polling</code> CometD transport is used, the
    heart-beat mechanism consist of a HTTP POST request to the server.
    Even if the CometD client is completely idle (for example, the user went to lunch), the heart-beat
    mechanism continues to send POSTs at a regular interval to the server.
    If the server's <code>web.xml</code> is configured with a <code>&lt;session-timeout&gt;</code> element,
    that destroys the <code>HttpSession</code> after 30 minutes of inactivity, then <code>HttpSession</code>s will
    never be destroyed because the heart-beat mechanism looks like a legitimate HTTP request to the server,
    and it never stops. The server cannot know that those POSTs are just heart-beats.
</para>
<para>
    The <code>ActivityExtension</code> solves this problem.
</para>
<para>
    The <code>ActivityExtension</code> defines two types of inactivity:
</para>
<itemizedlist>
<listitem>
<para>
    client-only inactivity, where the client sends periodic heart-beat messages but no other messages,
    while the server may send normal messages to clients
</para>
</listitem>
<listitem>
<para>
    client-server inactivity, where the client and the server sends only periodic heart-beat messages
    and no other messages.
</para>
</listitem>
</itemizedlist>

<section>
<info>
    <title>Enabling the Extension</title>
</info>
<para>
    To enable the <code>ActivityExtension</code>, you must add the extension to the <code>BayeuxServer</code>
    during initialization, specifying the type of activity you want to monitor, and the max inactivity period
    in milliseconds:
</para>
<informalexample>
<programlisting language="java"><![CDATA[
bayeuxServer.addExtension(new ActivityExtension(ActivityExtension.Activity.CLIENT, 15 * 60 * 1000L));
]]></programlisting>
</informalexample>
<para>
    The example above configures the <code>ActivityExtension</code> to monitor client-only activity,
    and disconnects inactive clients after 15 minutes (or 15 * 60 * 1000 ms) of inactivity.
</para>
<para>
    Similarly, to monitor client-server activity:
</para>
<informalexample>
<programlisting language="java"><![CDATA[
bayeuxServer.addExtension(new ActivityExtension(ActivityExtension.Activity.CLIENT_SERVER, 15 * 60 * 1000L));
]]></programlisting>
</informalexample>
<para>
    The example above configures the <code>ActivityExtension</code> to monitor client-server activity,
    and disconnects inactive clients after 15 minutes of inactivity.
</para>
</section>

<section>
<info>
    <title>Enabling the Extension Only for a Specific ServerSession</title>
</info>
<para>
    The <classname>org.cometd.server.ext.ActivityExtension</classname> can be installed if you want to
    monitor the inactivity of all clients in the same way.
</para>
<para>
    It is possible to monitor the inactivity of particular clients by not installing the
    <code>ActivityExtension</code> on the <code>BayeuxServer</code>, and by installing a
    <classname>org.cometd.server.ext.ActivityExtension.SessionExtension</classname>
    on the specific server session for which you want to monitor inactivity, for example:
</para>
<informalexample>
<programlisting language="java"><![CDATA[
public class MyPolicy extends DefaultSecurityPolicy
{
    @Override
    public boolean canHandshake(BayeuxServer server, ServerSession session, ServerMessage message)
    {
        if (!isAdminUser(session, message))
            session.addExtension(new ActivityExtension.SessionExtension(ActivityExtension.Activity.CLIENT, 10 * 60 * 1000L));
        return true;
    }
}
]]></programlisting>
</informalexample>
<para>
    In the example above, a custom <code>SecurityPolicy</code> (see <xref linkend="java_server_authorization" />)
    checks whether the handshake is that of an administrator user, and installs the activity extension only for
    non-administrators, with an inactivity timeout of 10 minutes.
</para>
<para>
    Alternatively, you can write a <code>BayeuxServer</code> extension that installs the
    <code>ActivityExtension.SessionExtension</code> selectively:
</para>
<informalexample>
<programlisting language="java"><![CDATA[
public class MyExtension extends BayeuxServer.Extension.Adapter
{
    @Override
    public boolean sendMeta(ServerSession session, ServerMessage.Mutable message)
    {
        if (Channel.META_HANDSHAKE.equals(message.getChannel()) && message.isSuccessful())
        {
            if (!isAdminUser(session, message))
                session.addExtension(new ActivityExtension.SessionExtension(ActivityExtension.Activity.CLIENT, 10 * 60 * 1000L));
        }
        return true;
    }
}
]]></programlisting>
</informalexample>
<para>
    In the example above, a custom <code>BayeuxServer</code> extension checks whether the handshake has been
    successful, and installs the activity extension only for non-administrators, with an inactivity timeout
    of 10 minutes.
</para>
</section>

</section>
